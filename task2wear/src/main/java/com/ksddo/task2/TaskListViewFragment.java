package com.ksddo.task2;import android.app.Fragment;import android.content.Intent;import android.os.Bundle;import android.speech.RecognizerIntent;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.Button;import android.widget.ListView;import android.widget.TextView;import com.google.android.gms.common.ConnectionResult;import com.google.android.gms.common.api.GoogleApiClient;import com.google.android.gms.common.api.PendingResult;import com.google.android.gms.common.api.ResultCallback;import com.google.android.gms.wearable.DataApi;import com.google.android.gms.wearable.PutDataMapRequest;import com.google.android.gms.wearable.PutDataRequest;import com.google.android.gms.wearable.Wearable;import com.ksddo.mylibrary.TaskEvent;import com.ksddo.mylibrary.TaskEventAdapter;import java.util.ArrayList;import java.util.List;import java.util.Random;/** * Created by k_tetsuo on 2015/07/31. */public class TaskListViewFragment extends Fragment implements ResultCallback<DataApi.DataItemResult>, AdapterView.OnItemClickListener, View.OnClickListener{    private String pageTitle;    private ListView listView_task;    GoogleApiClient mGoogleApiClient;    ArrayList<TaskEvent> taskEventArrayList;    TaskEventAdapter mTaskEventAdapter;    public static final String PAGE_TITLE = "PAGE_TITLE";    public static final String TASK_EVENT_ARRAY_LIST = "taskEventArrayList";    public TaskListViewFragment() {    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        this.pageTitle = getArguments().getString(PAGE_TITLE);        MainWearActivity activity = (MainWearActivity) getActivity();        this.taskEventArrayList = activity.getArrayList(pageTitle);        View view = inflateView(inflater, container);        ((TextView) view.findViewById(com.ksddo.task2.R.id.text)).setText(pageTitle);//                View v = inflater.inflate(R.layout.fragment_test, container, false);        listView_task = (ListView) view.findViewById(com.ksddo.task2.R.id.listView_task);        mTaskEventAdapter = new TaskEventAdapter(taskEventArrayList, getActivity().getApplicationContext());        listView_task.setAdapter(mTaskEventAdapter);        listView_task.setOnItemClickListener(this);        if(mGoogleApiClient == null) {            mGoogleApiClient = new GoogleApiClient.Builder(getActivity().getApplicationContext())                    .addApi(Wearable.API).addConnectionCallbacks(new GoogleApiClient.ConnectionCallbacks() {                        @Override                        public void onConnected(Bundle bundle) {                            //接続が完了した時に呼び出される                        }                        @Override                        public void onConnectionSuspended(int cause) {                            //一時的に切断された時の処理を記述する                        }                    })                    .addOnConnectionFailedListener(new GoogleApiClient.OnConnectionFailedListener() {                        @Override                        public void onConnectionFailed(ConnectionResult connectionResult) {                        }                    }).build();            mGoogleApiClient.connect();        }        return view;    }    public View inflateView(LayoutInflater inflater, ViewGroup container)    {        return inflater.inflate(com.ksddo.task2.R.layout.fragment_task_list_view, container, false);    }    public void notifyDataSetChanged()    {        if(mTaskEventAdapter != null)            mTaskEventAdapter.notifyDataSetChanged();    }    public void syncData(String action, String key, String value) {        PutDataMapRequest dataMap = PutDataMapRequest.create(action);        dataMap.getDataMap().putString(key, value + new Random().nextInt());        PutDataRequest request = dataMap.asPutDataRequest();        PendingResult<DataApi.DataItemResult> pendingResult = Wearable.DataApi                .putDataItem(mGoogleApiClient, request);        pendingResult.setResultCallback(this);    }    @Override    public void onResult(DataApi.DataItemResult dataItemResult) {    }    @Override    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {        ((MainWearActivity)getActivity()).onItemClick(this, parent, view, position, id);    }    @Override    public void onClick(View v)    {        ((MainWearActivity)getActivity()).displaySpeechRecognizer();    }}